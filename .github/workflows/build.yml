name: Build Android APK

on: 
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    name: Build APK
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🔍 Verify files
        run: |
          echo "Checking required files..."
          ls -lah
          if [ ! -f "main.py" ]; then
            echo "❌ main.py not found!"
            exit 1
          fi
          if [ ! -f "buildozer.spec" ]; then
            echo "❌ buildozer.spec not found!"
            exit 1
          fi
          if [ ! -f "yolov8_640_float32.tflite" ]; then
            echo "⚠️ Warning: yolov8_640_float32.tflite not found (app will work without it)"
          else
            echo "✅ Model file found"
            ls -lh yolov8_640_float32.tflite
          fi

      - name: 🧹 Clean previous builds
        run: |
          rm -rf .buildozer
          rm -rf bin

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 📦 Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-pip \
            build-essential \
            git \
            zip \
            unzip \
            openjdk-17-jdk \
            autoconf \
            libtool \
            pkg-config \
            zlib1g-dev \
            libncurses-dev \
            cmake \
            libffi-dev \
            libssl-dev \
            ccache \
            libltdl-dev

      - name: 🔨 Install Buildozer
        run: |
          pip install --upgrade pip
          pip install buildozer cython==0.29.33

      - name: 💾 Cache Buildozer dependencies
        uses: actions/cache@v3
        with:
          path: |
            .buildozer
          key: buildozer-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            buildozer-

      - name: 🔧 Build APK with Buildozer
        run: |
          buildozer android debug
        env:
          BUILDOZER_WARN_ON_ROOT: 0

      - name: 📤 Upload APK Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: DentalDetection-Debug-APK
          path: bin/*.apk
          if-no-files-found: error
          retention-days: 30

      - name: 📊 Show build info
        if: success()
        run: |
          echo "✅ Build successful!"
          ls -lh bin/*.apk
          APK_PATH=$(find bin -name "*.apk" | head -1)
          if [ -n "$APK_PATH" ]; then
            echo "APK: $APK_PATH"
            echo "Size: $(du -h $APK_PATH | cut -f1)"
          fi

      - name: 🚨 Show logs on failure
        if: failure()
        run: |
          echo "❌ Build failed. Showing logs..."
          echo ""
          echo "=== Last 300 lines of buildozer output ==="
          if [ -f ".buildozer/android/platform/build-arm64-v8a/build.log" ]; then
            tail -n 300 .buildozer/android/platform/build-arm64-v8a/build.log
          fi
          echo ""
          echo "=== Python build logs ==="
          find .buildozer -name "*.log" -type f 2>/dev/null | while read log; do
            echo "--- $log ---"
            tail -n 50 "$log"
          done
          echo ""
          echo "=== Build directory structure ==="
          ls -R .buildozer/android/platform/ 2>/dev/null | head -100
